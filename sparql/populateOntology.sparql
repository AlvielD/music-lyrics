PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX core: <http://vivoweb.org/ontology/core#>
PREFIX rdf:		<http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdfs:	<http://www.w3.org/2000/01/rdf-schema#>
PREFIX mm:		<https://w3id.org/polifonia/ontology/music-meta/1.0/>
PREFIX src:		<https://w3id.org/polifonia/ontology/source/1.0/>
PREFIX ml: 		<http://w3id.org/polifonia/ontology/music-lyrics/1.0/>
PREFIX xyz:		<http://sparql.xyz/facade-x/data/>
PREFIX fx:		<http://sparql.xyz/facade-x/ns/>

CONSTRUCT {
  # Metadata
  ?songURI a mm:MusicEntity .
  ?songURI core:hasTitle ?title .
  ?songURI core:hasLanguage ?lang .
  ?songURI mm:isCreatedBy ?creativeProcessURI .
  ?creativeProcessURI a mm:MusicEntity .
  ?creativeProcessURI core:involvesAgent ?MusicArtistURI .
  ?MusicArtistURI core:name ?name .
  
  
  # Annotations
  ?songURI core:hasPart ?abstractScoreURI .
  ?abstractScoreURI a mm:AbstractScore .
  ?abstractScoreURI mm:hasText ?lyricsURI .
  ?lyricsURI a mm:Lyrics .
  ?lyricsURI mm:hasTextPart ?paragraphURI .
  ?paragraphURI a ?paragraphClass .
  
  
  # Time dimension
  ?paragraphURI ml:hasMusicTimeInterval ?musicTimeIntervalURI .
  ?musicTimeIntervalURI a core:MusicTimeInterval .
  
  ?musicTimeIntervalURI core:hasStartMusicTimeIndex ?startMusicTimeIndexURI .
  ?musicTimeIntervalURI core:hasEndMusicTimeIndex ?endMusicTimeIndexURI .
  ?startMusicTimeIndexURI a core:MusicTimeIndex .
  ?endMusicTimeIndexURI a core:MusicTimeIndex .
  
  ?startMusicTimeIndexURI core:hasMusicTimeIndexComponent ?startMusicTimeIndexComponentURI .
  ?endMusicTimeIndexURI core:hasMusicTimeIndexComponent ?endMusicTimeIndexComponentURI .
  ?startMusicTimeIndexComponentURI a core:MusicTimeIndexComponent .
  ?endMusicTimeIndexComponentURI a core:MusicTimeIndexComponent .
  
  ?startMusicTimeIndexComponentURI core:hasValue ?startMusicTimeIndexComponent .
  ?endMusicTimeIndexComponentURI core:hasValue ?endMusicTimeIndexComponent .
  
  
  # Lines
  ?paragraphURI ml:hasTextPart ?linesURI .
  ?linesURI a mm:TextFragment .
  ?linesURI ml:hasValue ?line .	# NOT IMPLEMENTED YET ON THE ONTOLOGY

} WHERE {
  SERVICE <x-sparql-anything:00000000.json> {
    # Metadata
    ?songURI xyz:meta ?metadata .
    ?metadata xyz:song_id ?songID .
  	?metadata xyz:title ?titleVar .
    ?metadata xyz:language ?langvar .
    ?metadata xyz:artist ?artistVar .
          

    
    # Annotations
    ?songURI xyz:annotations ?annotationsContainer .
    ?annotationsContainer fx:anySlot ?annotations .
    ?annotations xyz:paragraph ?paragraphVar .
    ?annotations xyz:occurrence ?occurrenceVar .
    ?annotations xyz:time_index ?timeIndexContainer .
    ?timeIndexContainer fx:anySlot ?timeIndexVar .
    
    
    # Lines
  	?annotations xyz:lines ?linesContainer .
  	?linesContainer fx:anySlot ?lineVar .
  	?lineVar xyz:line ?lineTextVar .
    
    # BINDING VARIABLES
    
    # VALUES
    BIND(xsd:string(?titleVar) AS ?title)
    BIND(xsd:string(?langvar) AS ?lang)
    BIND(xsd:string(?artistVar) AS ?name)
    
    
    # URIs
    BIND(IRI(CONCAT(STR(mm:MusicArtist), "/", SHA1(STR(?artistVar)))) AS ?MusicArtistURI)
    BIND(IRI(CONCAT(STR(mm:CreativeProcess), "/", SHA1(STR(?titleVar)))) AS ?creativeProcessURI)
    
    BIND(IRI(CONCAT(STR(mm:AbstractScore), "/", SHA1(?songID))) AS ?abstractScoreURI)
    BIND(IRI(CONCAT(STR(mm:Lyrics), "/", SHA1(?songID))) AS ?lyricsURI)
    BIND(IRI(CONCAT(STR(ml:AbstractScore), "/", CONCAT(STR(?paragraphVar), STR(?occurrenceVar)), "/", SHA1(?songID))) AS ?paragraphURI)
    
    BIND(IRI(CONCAT(STR(ml:), STR(?paragraphVar))) AS ?paragraphClass)
    BIND(IRI(CONCAT(STR(ml:TextFragment), "/", SHA1(STR(?lineTextVar)))) AS ?linesURI)
    BIND(xsd:string(?lineTextVar) AS ?line)
    
    BIND(IRI(
        CONCAT(STR(ml:AbstractScore), "/", CONCAT(STR(?paragraphVar), STR(?occurrenceVar)), "/", SHA1(?songID))
      ) AS ?musicTimeIntervalURI)
    BIND(IRI(
        CONCAT(STR(core:MusicTimeIndex), "/", CONCAT(STR(?paragraphVar), STR(?occurrenceVar)), "/start/", SHA1(STR(?songID)))
      ) AS ?startMusicTimeIndexURI)
    BIND(IRI(
        CONCAT(STR(core:MusicTimeIndex), "/", CONCAT(STR(?paragraphVar), STR(?occurrenceVar)), "/end/", SHA1(STR(?songID)))
      ) AS ?endMusicTimeIndexURI)
    
    BIND(IRI(
        CONCAT(STR(core:MusicTimeIndexComponent), "/", CONCAT(STR(?paragraphVar), STR(?occurrenceVar)), "/start/", SHA1(STR(?songID)))
      ) AS ?startMusicTimeIndexComponentURI)
    BIND(IRI(
        CONCAT(STR(core:MusicTimeIndexComponent), "/", CONCAT(STR(?paragraphVar), STR(?occurrenceVar)), "/end/", SHA1(STR(?songID)))
      ) AS ?endMusicTimeIndexComponentURI)
    
    # THIS APPROACH DOES NOT WORK EITHER???
    #BIND(fx:cardinal(?timeIndexVar) AS ?cardinal)
    #BIND(IF(?cardinal = 0, xsd:float(?timeIndexVar), xsd:float(?timeIndexVar)) AS ?startMusicTimeIndexComponent)
    #BIND(IF(?cardinal = 1, xsd:float(?timeIndexVar), xsd:float("0")) AS ?endMusicTimeIndexComponent)
    BIND(?timeIndexVar AS ?startMusicTimeIndexComponent)
  }
}